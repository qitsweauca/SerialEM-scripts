ScriptName MMMCars
# make all the MMMs from different cartriges automatically!!!
# use property of current registration to do so. 

echo #############################################
echo ###         ClearPersistentvars          ####
echo #############################################

##########################
# navigator must be open
##########################
echo MMMCars!!!

# 2. Call Cars
Call Cars

# 3. make LMM appropriate map
SetProperty RealignItemMaxLMfield 700

## Define persistant variable 
IsVariableDefined regInd
If $repVal1 == 0 
     regInd := 1           
Endif

CallFunction MyFuncs::C2_150-OBJ_out
ReportNavItem 
SetNavRegistration $navRegis
LoadCartridge $navRegis
SetColumnOrGunValve 1
RealignToNavItem 0
Copy A P
MoveStage 9.8  0.5

# 4. V, fix Z 
CallFunction MyFuncs::C2_50-OBJ_70
GoToLowDoseArea V
V
Copy A T
Call Z
UpdateGroupZ 
V
AlignTo T

# 5. MMM; 
SetUserSetting MontageUseViewInLD 1
# for K3, 2x3 gives roughly square; no need for template setup
OpenNewMontage 2 3 Car$navRegis-mesh$navLabel-MMM2x3.map
Montage 
NewMap 
CallFunction NewMapToJPG
CloseFile 

# 6. CenterBeam & autofocus
AutoCenterBeam 
SetTargetDefocus -1.8
G

# 7.  not use V & Search, align pieces
SetUserSetting  MontageUseSearchInLD 0
SetUserSetting  MontageUseViewInLD 0
SetUserSetting  MontageAlignPieces 1

ReportNavItem 
# require a template RMM already opened latest as IS montage with 2x3
# again, for K3, 2x3 gives roughly square
OpenNewMontage 0 0 Car$navRegis-mesh$navLabel-RMM.map
ReportStageXYZ baseX baseY
# int = 3. spacing = 4micron offset = 8.0, around middle (8.0 here)
# -> offset = ( spacing + int * spacing ) / 2 
# 4 x 4, 3, =>7.5
# 4 x 4, 4, => 10
n = 4
d = 4
offset = ( $d + $n * $d ) / 2 
Loop $n ix
    x = $baseX + $ix * $d - $offset
    Echo Doing column at X = $X
    Loop $n iy
         y = $baseY + $iy * $d - $offset
         MoveStageTo $x $y
         #Autofocus
         #Save
         Montage 
         NewMap
         CallFunction NewMapToJPG
    EndLoop
EndLoop
CloseFile 

# restore stage postion
MoveStage $baseX $baseY

## 8.  if last point of this registration, switch to next available registration
ReportNumNavAcquire 
If $repVal1 == 1  
     regInd := $regInd + 1
      If $regInd > $#cat
         regInd :=                            # clear the persistant variable
         exit
       Else 
           echo SetNavRegistration $cat[$regInd]
           SetNavRegistration $cat[$regInd]
           LoadCartridge $cat[$regInd]
       Endif   
 else 
       echo  +++++  Going to next item in the same Registration! +++++
Endif

# 9, make LMM inappropriate again 
SetProperty RealignItemMaxLMfield 5
